This may be due to a bug in musl's stdlib.h:

fuschia ~ # cat test.cpp 
#include <algorithm>
fuschia ~ # g++ -std=c++98 -pedantic -c test.cpp 
fuschia ~ # g++ -std=c++11 -pedantic -c test.cpp 
In file included from /usr/lib/gcc/x86_64-gentoo-linux-musl/4.8.4/include/xmmintrin.h:38:0,
                 from /usr/lib/gcc/x86_64-gentoo-linux-musl/4.8.4/include/x86intrin.h:34,
                 from /usr/lib/gcc/x86_64-gentoo-linux-musl/4.8.4/include/g++-v4/x86_64-gentoo-linux-musl/bits/opt_random.h:33,
                 from /usr/lib/gcc/x86_64-gentoo-linux-musl/4.8.4/include/g++-v4/random:51,
                 from /usr/lib/gcc/x86_64-gentoo-linux-musl/4.8.4/include/g++-v4/bits/stl_algo.h:65,
                 from /usr/lib/gcc/x86_64-gentoo-linux-musl/4.8.4/include/g++-v4/algorithm:62,
                 from test.cpp:1:
/usr/lib/gcc/x86_64-gentoo-linux-musl/4.8.4/include/mm_malloc.h:34:64: error: declaration of 'int posix_memalign(void**, size_t, size_t) throw ()' has a different exception specifier
 extern "C" int posix_memalign (void **, size_t, size_t) throw ();
                                                                ^
In file included from /usr/lib/gcc/x86_64-gentoo-linux-musl/4.8.4/include/g++-v4/cstdlib:72:0,
                 from /usr/lib/gcc/x86_64-gentoo-linux-musl/4.8.4/include/g++-v4/bits/stl_algo.h:59,
                 from /usr/lib/gcc/x86_64-gentoo-linux-musl/4.8.4/include/g++-v4/algorithm:62,
                 from test.cpp:1:
/usr/include/stdlib.h:98:5: error: from previous declaration 'int posix_memalign(void**, size_t, size_t)'
 int posix_memalign (void **, size_t, size_t);
     ^

See: https://gcc.gnu.org/ml/gcc-patches/2015-05/msg01425.html

diff -Naur cups-filters-1.0.71.orig/configure.ac cups-filters-1.0.71/configure.ac
--- cups-filters-1.0.71.orig/configure.ac	2015-07-02 19:04:48.000000000 -0400
+++ cups-filters-1.0.71/configure.ac	2015-07-20 19:06:48.875330353 -0400
@@ -602,7 +602,7 @@
 AS_IF([test x"$GCC" = "xyes"], [
 	# Be tough with warnings and produce less careless code
 	CFLAGS="$CFLAGS -Wall -pedantic -std=gnu99"
-	CXXFLAGS="$CXXFLAGS -Wall -pedantic" # -Weffc++" # TODO: enable when it does not print 1MB of warnings
+	CXXFLAGS="$CXXFLAGS -Wall" # -Weffc++" # TODO: enable when it does not print 1MB of warnings
 ])
 CFLAGS="$CFLAGS -D_GNU_SOURCE"
 CXXFLAGS="$CXXFLAGS -D_GNU_SOURCE"
